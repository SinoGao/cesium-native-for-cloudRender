// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "Cesium3DTiles/Library.h"

#include <CesiumUtility/ExtensibleObject.h>

#include <optional>
#include <string>

namespace Cesium3DTiles {
/**
 * @brief Metadata about the entire tileset.
 */
struct CESIUM3DTILES_API Asset final : public CesiumUtility::ExtensibleObject {
  static inline constexpr const char* TypeName = "Asset";

  /**
   * @brief The 3D Tiles version. The version defines the JSON schema for the
   * tileset JSON and the base set of tile formats.
   */
  std::string version;

  /**
   * @brief B3dm and i3dm tiles embed glTF. According to the glTF spec glTF uses a right-handed coordinate system
   * and defines the y axis as up.By default embedded models are considered to be y-up, but in order to
   * support a variety of source data, including models defined directly in WGS84 coordinates, embedded glTF
   * models may be defined as x-up, y-up, or z-up with the asset.gltfUpAxis property oftileset.json.
   * In general an implementation should transform glTF assets to z-up at runtime to be consistent with
   * the z-up coordinate system of the bounding volume hierarchy
   */
  std::string gltfUpAxis;

  /**
   * @brief Application-specific version of this tileset, e.g., for when an
   * existing tileset is updated.
   */
  std::optional<std::string> tilesetVersion;
};
} // namespace Cesium3DTiles
